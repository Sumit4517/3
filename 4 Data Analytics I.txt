# Step 1: Import Libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Step 2: Load the Dataset
df = pd.read_csv('HousingData.csv')

df.shape

df.isnull().sum()

df.head(10)

print(df.columns)

# Step 3: Replace Null Values with Zeros (optional if your dataset has no null values)
df.fillna(0, inplace=True)

# Step 4: Explore the Data (Optional)
print(df.head())  # Display the first few rows of the dataframe
print(df.info())  # Display information about the dataframe

# Step 5: Prepare the Data
X = df.drop('MEDV', axis=1)  # Features
y = df['MEDV']  # Target variable (price)

# Split the data into training and testing sets (70% train, 30% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Step 6: Train the Model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 7: Evaluate the Model
y_pred = model.predict(X_test)

# Calculate Mean Squared Error (MSE) and R-squared
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f'Mean Squared Error (MSE): {mse}')
print(f'R-squared: {r2}')

# Optional: Plot actual vs. predicted prices
plt.scatter(y_test, y_pred)
plt.xlabel('Actual Prices')
plt.ylabel('Predicted Prices')
plt.title('Actual vs. Predicted Prices')
plt.show()







